---
// Import astro icon component
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import Button from './Button.astro';

// Create interface
interface Props{
    project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;

// Combine all the tools into one string
const tools:string = project.data.tools.join(', ').toUpperCase();
const category:string = project.data.category.toUpperCase();

// Function to parse a url to get its name
function getWebsiteName(url: string): string {
    // Create a URL object from the input string
    const parsedUrl = new URL(url);

    // Extract the hostname (the domain of the URL)
    const hostname = parsedUrl.hostname;

    // Remove "www." if it exists, and split the hostname to get the domain
    const domain = hostname.replace(/^www\./, '').split('.')[0];

    // Capitalize the first letter and return the result
    return domain.charAt(0).toUpperCase() + domain.slice(1);
}

// Function to get the relevant icon string from a URL
function getButtonTitleFromUrl(url: string): string {
    const name:string = getWebsiteName(url);

    return "View on " + name;
}
---
<!-- Project Content -->
<div class="container mx-auto h-[25rem] grid grid-rows-1 grid-cols-1 lg:grid-cols-2 bg-primary-900/30 text-white">
    <!-- Image Container-->
    <div class="hidden lg:block relative">
        <Image src={project.data.image} alt={project.data.name} class={"absolute w-full h-full object-cover object-top"} />
    </div>

    <!-- Infomation Container -->
    <div class="p-8">
        <div class="relative w-full h-full">
            <!-- Type & Tools -->
            <div class="hidden lg:flex absolute right-0 gap-x-6 text-sm font-mono">
                <p>TYPE: <span class="text-accent-300">{category}</span></p>
                <p>TOOLS: <span class="text-accent-300">{tools}</span></p>
            </div>
      
            <!-- Main -->
            <div class="flex flex-col justify-center h-full gap-7">
                <div class="flex flex-col gap-y-3">
                    <h1 class="font-semibold text-4xl">{project.data.name}</h1>
                    <p class="text-primary-300 text-lg">{project.data.description}</p>
                </div>
                
                <div class="flex flex-row gap-6">
                    {project.data.links ? project.data.links.map((link: string) => (
                        <Button title={getButtonTitleFromUrl(link)} href={link}></Button>
                    )) : ''}
                </div>
            </div>
        </div>
    </div>
</div>